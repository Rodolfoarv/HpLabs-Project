<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-12">
                <h3>Contact Information </h3>
                <h4 class="title">Rodolfo Andrés Ramírez Valenzuela<br />
                <small>Email: <a href="mailto:rodolfo@ramirezvalenzuela.com">rodolfo@ramirezvalenzuela.com</small>
                <br><small> Github: Rodolfoarv </small>
                <br><small>  <a href="https://github.com/Rodolfoarv/HpLabs-Project">Application Source Code </a> </small>
                <br> <small> Phone Number: (011)-521-55-54555604 (Mobile) </small>
      </div>
    </div>

    <div class="row">
      <div class="col-md-12">

        <h2> Back End </h2>
        <p> The project back end was developed with <b> Node.js </b>. However as a requirement
        in order to do data analysis it needs to be done in a higher perfomance language such
        as C++. <b> The reason Node.js was chosen</b> between other languages such like Ruby or Python
        is because Node provides an API to move data from C++ to Node, this is <b> done by making
        an addon</b> with the <b> V8 API </b> .</p>

        <p> All the code generated to communicate between Node and C++ can be found on the
        <b> generator_node.cpp</b> file under the src/cpp folder. </p>

        <p> The following technologies were used to develop the back end: </p>
        <ul>
          <li><p>Node (v4.2.1)</p></li>
          <li><p>Express (4.13.1) </p></li>
          <li><p>Node-gym (v8 API 3.3.1)  <b>Connects C++ with Node.js </b></p> </li>
          <li><p>gcc (4.8.4)</p></li>

        </ul>

        <p> Generator.cpp file provided by the project's specs was <b>refactored</b> as a class
        this way the generator_node.cpp file can communicate with an object and do operations
        such as: read_file, generate_files, combine_charts. Another reason the Template Method
        Design Pattern was used is because extending our code with new methods will be handled
        easily. </p>

        <p> <b> The data structure </b> used in order to <b> improve </b> the performance
        of the server is a HashMap which stores as key the name of the file and as value
        the contents of the file. This way when an user tries to read a file from the server
        it will verify if the file already exists on the HashMap if it does not, then it creates
        an entry with the specified key and content, by doing this the server will not need
        to read the file once again when another request tries to access the same resource. </p>

        <h4> Process Diagram </h4>

        <img src="https://raw.githubusercontent.com/Rodolfoarv/HpLabs-Project/master/images/hplabs_activityDiagram.png">

        <h2> Front End </h2>

        <p> In the Front End the user will be able to retrieve data from the server,
        the user will input a file e.g <em>"1" </em> and the server will verify if that key
        exists on the HashMap if it does it will dispatch the content, if it does not
        it will create a new Entry with the specified information. The chart was developed
        with the <b> Google Charts API</b> it was chosen because it provides the user with
        useful information on the chart like using a range, hover over elements, selecting
        a sample and more. </p>

        <p> The following technologies were used to develop the front end: </p>
        <ul>
          <li><p>Jquery (v2.1.4)</p></li>
          <li><p>Google Charts </p></li>
          <li><p>Bootstrap </p> </li>
        </ul>

        <p> The chart has the following capabilities: </p>
        <ul>
          <li><p> Read data from a .txt file </p></li>
          <li><p> Mouse over action (hover) with information of the values on the chart </p></li>
          <li><p> Download chart as a PNG </p></li>
          <li><p> Combine two Charts </p></li>
          <li><p> Responsive Layout  </p></li>
          <li><p> Modify the x-axis range to display only certain elements</p> </li>
          <li><p> Modify the bucket size of the x-axis</p> </li>

        </ul>
        </p>

        <h2> Diagrams </h2>
        <img src="https://raw.githubusercontent.com/Rodolfoarv/HpLabs-Project/master/images/hplabs_packageDiagram.png">


        <h2> References </h2>
        <p> Scott Frees. C++ Processing from Node.js retrieved from: https://blog.scottfrees.com/c-processing-from-node-js </p>
        <p> Ph. Kruchten. The 4+1 View Model of Architecture. IEEE Software, vol. 12 (6), pp. 45-50, 1995. {\http://www.ics.uci.edu/~andre/ics223w2006/kruchten3.pdf}[http://www.ics.uci.edu/~andre/ics223w2006/kruchten3.pdf] Accessed May 21, 2016. </p>
        <p> Node.js v6.2.0 Documentation retrieved from: https://nodejs.org/api/addons.html Accessed May 21, 2016.</p>

        <h2> Special thanks to.. </h2>
        <p> Creative Tim for providing the bootstrap template. </p>

    </div>

  </div>
</div>
